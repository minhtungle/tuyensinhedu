{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"G:\\\\L\\xE0m vi\\u1EC7c\\\\Mobile App\\\\tuyensinhedu\\\\assets\\\\components\\\\Alert.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton } from \"react-native-paper\";\n\nvar Type = function Type(param) {\n  switch (param) {\n    case \"success\":\n      return {\n        color: \"#9CDC78\",\n        image: \"emoticon-excited\"\n      };\n\n    case \"info\":\n      return {\n        color: \"#84AFF7\",\n        image: \"emoticon-wink-outline\"\n      };\n\n    case \"warning\":\n      return {\n        color: \"#F8C03E\",\n        image: \"emoticon-tongue-outline\"\n      };\n\n    case \"error\":\n      return {\n        color: \"#FF8E9E\",\n        image: \"emoticon-confused\"\n      };\n  }\n};\n\nexport function Alert(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var type = Type(props.type);\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 300,\n      width: 300,\n      backgroundColor: type.color,\n      margin: 20,\n      borderRadius: 20,\n      alignItems: \"center\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 3.84,\n      elevation: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    icon: \"close\",\n    color: \"white\",\n    size: 22,\n    style: {\n      backgroundColor: type.color,\n      alignSelf: \"flex-end\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 5\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 8,\n      elevation: 1.5\n    },\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"100%\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      flex: 1,\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(IconButton, {\n    icon: type.image,\n    color: \"white\",\n    size: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      bottom: 15,\n      alignSelf: \"center\",\n      width: 45,\n      height: 10,\n      borderRadius: 50,\n      backgroundColor: \"black\",\n      opacity: 0.1,\n      transform: [{\n        scaleX: 2\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, props.title), React.createElement(Text, {\n    style: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, props.message)))));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    color: \"#FFF\",\n    flexGrow: 1,\n    textShadowColor: \"rgba(0, 0, 0, 1)\",\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 4\n  },\n  message: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#FFF\",\n    flexGrow: 1,\n    textShadowColor: \"rgba(0, 0, 0, 1)\",\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 4\n  }\n});\nexport default Alert;","map":{"version":3,"sources":["G:/Làm việc/Mobile App/tuyensinhedu/assets/components/Alert.js"],"names":["React","useState","IconButton","Type","param","color","image","Alert","props","modalVisible","setModalVisible","type","flex","justifyContent","alignItems","marginTop","height","width","backgroundColor","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","alignSelf","flexDirection","position","bottom","opacity","transform","scaleX","styles","title","message","StyleSheet","create","fontSize","fontWeight","flexGrow","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,UAAQA,KAAR;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAK,MAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAK,SAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAjBJ;AAsBD,CAvBD;;AAwBA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,kBACaP,QAAQ,CAAC,IAAD,CADrB;AAAA;AAAA,MACpBQ,YADoB;AAAA,MACNC,eADM;;AAE3B,MAAMC,IAAI,GAAGR,IAAI,CAACK,KAAK,CAACG,IAAP,CAAjB;AAEA,SACE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAC,MAArB;AAA4B,IAAA,WAAW,EAAE,IAAzC;AAA+C,IAAA,OAAO,EAAEF,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,SAAS,EAAE;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,KAAK,EAAE,GAFF;AAGLC,MAAAA,eAAe,EAAEP,IAAI,CAACN,KAHjB;AAILc,MAAAA,MAAM,EAAE,EAJH;AAKLC,MAAAA,YAAY,EAAE,EALT;AAMLN,MAAAA,UAAU,EAAE,QANP;AAOLO,MAAAA,WAAW,EAAE,MAPR;AAQLC,MAAAA,YAAY,EAAE;AACZL,QAAAA,KAAK,EAAE,CADK;AAEZD,QAAAA,MAAM,EAAE;AAFI,OART;AAYLO,MAAAA,aAAa,EAAE,IAZV;AAaLC,MAAAA,YAAY,EAAE,IAbT;AAcLC,MAAAA,SAAS,EAAE;AAdN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAE;AACLP,MAAAA,eAAe,EAAEP,IAAI,CAACN,KADjB;AAELqB,MAAAA,SAAS,EAAE,UAFN;AAGLL,MAAAA,WAAW,EAAE,MAHR;AAILC,MAAAA,YAAY,EAAE;AACZL,QAAAA,KAAK,EAAE,CADK;AAEZD,QAAAA,MAAM,EAAE;AAFI,OAJT;AAQLO,MAAAA,aAAa,EAAE,GARV;AASLC,MAAAA,YAAY,EAAE,CATT;AAWLC,MAAAA,SAAS,EAAE;AAXN,KAJT;AAiBE,IAAA,OAAO,EAAE,mBAAM;AACbf,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAwCE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAE,MADF;AAELJ,MAAAA,cAAc,EAAE,YAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILF,MAAAA,IAAI,EAAE,CAJD;AAKLe,MAAAA,aAAa,EAAE;AALV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEhB,IAAI,CAACL,KAAvB;AAA8B,IAAA,KAAK,EAAC,OAApC;AAA4C,IAAA,IAAI,EAAE,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLsB,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,MAAM,EAAE,EAFH;AAGLH,MAAAA,SAAS,EAAE,QAHN;AAILT,MAAAA,KAAK,EAAE,EAJF;AAKLD,MAAAA,MAAM,EAAE,EALH;AAMLI,MAAAA,YAAY,EAAE,EANT;AAOLF,MAAAA,eAAe,EAAE,OAPZ;AAQLY,MAAAA,OAAO,EAAE,GARJ;AASLC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAD;AATN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAyBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B1B,KAAK,CAAC0B,KAAlC,CAzBF,EA0BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B3B,KAAK,CAAC2B,OAApC,CA1BF,CAxCF,CARF,CADF,CADF;AAkFD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLlC,IAAAA,KAAK,EAAE,MAHF;AAILmC,IAAAA,QAAQ,EAAE,CAJL;AAKLC,IAAAA,eAAe,EAAE,kBALZ;AAMLC,IAAAA,gBAAgB,EAAE;AAAEzB,MAAAA,KAAK,EAAE,CAAC,CAAV;AAAaD,MAAAA,MAAM,EAAE;AAArB,KANb;AAOL2B,IAAAA,gBAAgB,EAAE;AAPb,GADwB;AAU/BR,EAAAA,OAAO,EAAE;AACPG,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPlC,IAAAA,KAAK,EAAE,MAHA;AAIPmC,IAAAA,QAAQ,EAAE,CAJH;AAKPC,IAAAA,eAAe,EAAE,kBALV;AAMPC,IAAAA,gBAAgB,EAAE;AAAEzB,MAAAA,KAAK,EAAE,CAAC,CAAV;AAAaD,MAAAA,MAAM,EAAE;AAArB,KANX;AAOP2B,IAAAA,gBAAgB,EAAE;AAPX;AAVsB,CAAlB,CAAf;AAqBA,eAAepC,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, StyleSheet, Text, View } from \"react-native\";\r\nimport { IconButton } from \"react-native-paper\";\r\n\r\nconst Type = (param) => {\r\n  switch (param) {\r\n    case \"success\":\r\n      return {\r\n        color: \"#9CDC78\",\r\n        image: \"emoticon-excited\",\r\n      };\r\n    case \"info\":\r\n      return {\r\n        color: \"#84AFF7\",\r\n        image: \"emoticon-wink-outline\",\r\n      };\r\n    case \"warning\":\r\n      return {\r\n        color: \"#F8C03E\",\r\n        image: \"emoticon-tongue-outline\",\r\n      };\r\n    case \"error\":\r\n      return {\r\n        color: \"#FF8E9E\",\r\n        image: \"emoticon-confused\",\r\n      };\r\n  }\r\n};\r\nexport function Alert(props) {\r\n  const [modalVisible, setModalVisible] = useState(true);\r\n  const type = Type(props.type);\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} visible={modalVisible}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: 22,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 300,\r\n            width: 300,\r\n            backgroundColor: type.color,\r\n            margin: 20,\r\n            borderRadius: 20,\r\n            alignItems: \"center\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n          }}\r\n        >\r\n          <IconButton\r\n            icon=\"close\"\r\n            color=\"white\"\r\n            size={22}\r\n            style={{\r\n              backgroundColor: type.color,\r\n              alignSelf: \"flex-end\",\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 5,\r\n              },\r\n              shadowOpacity: 0.5,\r\n              shadowRadius: 8,\r\n\r\n              elevation: 1.5,\r\n            }}\r\n            onPress={() => {\r\n              setModalVisible(!modalVisible);\r\n            }}\r\n          />\r\n          {/* Body Alert*/}\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <View>\r\n              <IconButton icon={type.image} color=\"white\" size={100} />\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: 15,\r\n                  alignSelf: \"center\",\r\n                  width: 45,\r\n                  height: 10,\r\n                  borderRadius: 50,\r\n                  backgroundColor: \"black\",\r\n                  opacity: 0.1,\r\n                  transform: [{ scaleX: 2 }],\r\n                }}\r\n              />\r\n            </View>\r\n            <Text style={styles.title}>{props.title}</Text>\r\n            <Text style={styles.message}>{props.message}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFF\",\r\n    flexGrow: 1,\r\n    textShadowColor: \"rgba(0, 0, 0, 1)\",\r\n    textShadowOffset: { width: -1, height: 1 },\r\n    textShadowRadius: 4,\r\n  },\r\n  message: {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFF\",\r\n    flexGrow: 1,\r\n    textShadowColor: \"rgba(0, 0, 0, 1)\",\r\n    textShadowOffset: { width: -1, height: 1 },\r\n    textShadowRadius: 4,\r\n  },\r\n});\r\n\r\nexport default Alert;\r\n"]},"metadata":{},"sourceType":"module"}